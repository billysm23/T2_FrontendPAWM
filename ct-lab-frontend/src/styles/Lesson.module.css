.lesson_container {
    min-height: calc(100vh - 80px);
    background-color: var(--bg-primary);
    padding: 4rem 2rem;
}

.lesson_header {
    text-align: center;
    margin-bottom: 3rem;
}

.lesson_header h1 {
    color: var(--text-primary);
    font-size: 2.5rem;
    margin-bottom: 1rem;
}

.lesson_content {
    max-width: 1400px;
    margin: 0 auto;
}

.lesson_content h1 {
    text-align: center;
}

.lesson_order {
    display: block;
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-top: 0.25rem;
}

.locked {
    opacity: 0.7;
    pointer-events: none;
    position: relative;
}

.locked::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.1);
    border-radius: inherit;
    pointer-events: none;
}

.locked .start_button {
    background: var(--text-secondary);
    pointer-events: none;
}

.card:not(.locked):hover {
    transform: translateY(-5px);
}

.card.locked:hover {
    transform: none;
}

.loading_container,
.error_container,
.empty_state {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
    padding: 2rem;
}

.loading {
    text-align: center;
}

.loading_text {
    margin-top: -2rem;
    color: var(--text-secondary);
    font-size: 1rem;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.error_container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
    padding: 2rem;
}

.error {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    max-width: 400px;
    text-align: center;
    box-shadow: var(--shadow-md);
}

/* Error severity styles */
.error.warning {
    border-left: 4px solid var(--warning-color);
}

.error.error {
    border-left: 4px solid var(--error-color);
}

.error.info {
    border-left: 4px solid var(--info-color);
}

.error_content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
}

.error_icon {
    font-size: 2rem;
    margin-bottom: 0.5rem;
}

.error_title {
    color: var(--text-primary);
    margin: 0;
}

.error_message {
    color: var(--text-secondary);
    margin: 0;
    line-height: 1.5;
}

.retry_button,
.support_button {
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
}

.retry_button {
    background: var(--primary-color);
    color: white;
    margin-top: 1rem;
}

.retry_button:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
}

.support_button {
    background: transparent;
    color: var(--primary-color);
    border: 1px solid var(--primary-color);
    margin-top: 0.5rem;
}

.support_button:hover {
    background: var(--primary-light);
}

.empty_state {
    text-align: center;
    padding: 4rem 2rem;
    color: var(--text-secondary);
}

.empty_image {
    width: 200px;
    height: auto;
    margin-bottom: 2rem;
    opacity: 0.7;
}

/* Loading spinner animation */
@keyframes spin {
    to { transform: rotate(360deg); }
}

.loading_spinner {
    border: 3px solid var(--border-color);
    border-top-color: var(--primary-color);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 1s linear infinite;
}

@media (max-width: 768px) {
    .lesson_container {
        padding: 1rem 1rem;
    }

    .lesson_header {
        margin-bottom: 1rem;
    }

    .lesson_header h1 {
        font-size: 1.75rem;
    }
}

@media (max-width: 480px) {
    .lesson_container {
        padding: 1rem 0rem;
    }

    .lesson_header h1 {
        font-size: 1.5rem;
    }
}